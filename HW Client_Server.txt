Client_Server

1) Прочиать про клиент-серверную архитектуру
Клиент - локальный компьютер, который выполняет отправку запроса к серверу для возможности предоставления данных или выполнения определенной группы действий.
Сервер - очень мощный компьютер или специальное системное обрудование, которое предназначается для разрешения определенного круга задач по процессу выполнения програмных кодов.
Он выполняет работы сервисного обслуживания по клиентским запросам, предоставляет пользователям доступ к определенным системным ресурсам, сохраняет данные или БД. 

2) Что ткое HTTP и HTTPS
HTTP - (Hyper Text Transfer Protocol) это протокол, позволяющий получать различные ресурсы, например HTML документы. Протокол HTTP лежит в основе обмена данными в интернете. HTTP является протоколом клиент-серверного взаимодействия.
Этот протокол описывает взаимодействие между двумя компьютерами (клиентом и сервером), простроенное на базе сообщений, называемых Request и Responce.
Каждое сообщение состоит из 3-х частей: стартовая строка, заголовки и тело. При этом обязательной является только стартовая строка.
HTTPS - (Hyper Text Transfer Protocol Secure) это безопасный протокол передачи данных, который поддерживает шифрование посредством криптографических протоколов SSSL и TLS. HTTPS рабоьает благодаря SSL/TLS сертификату.
  
3) HTTP методы 
GET - получение ресурса. Этот метод запрашивает представление ресурса. Запросы с использованием этого метода могут только извлекать данные. 
HEAD - запрашивает ресурс так же, как и GET, но без тела ответа.    
POST - создание ресурса. Используют для отправки сущностей к определенному ресурсу. Часто вызывает изменение состояния или какие-то побочные эффекты на сервере.
PUT - обновление ресурса. Заменяет все текущие представления ресурса данными запроса.
DELETE - удаление ресурса
CONNECT - устанавливает "туннель" к серверу, определенному по ресурсу.
OPTIONS - используется для описания параметров соединения с ресурсом.
TRACE - выполняет вызов возвращаемого тестового сообщения с ресурса.
PATCH - используется для частичного изменения ресурса.


4) HTTP статус коды сервера
1. 100 - 199 информационные
2. 200 - 299 успешные
3. 300 - 399 перенаправления
4. 400 - 499 клиентские ошибки
5. 500 - 599 серверные ошибки

5) Что такое ядро браузера 
Браузер = оболочка + ядро 
Оболочка - меню, панели инструментов и т.д. Он в основном предназначен ддля работы с пользовательским интерфейсом, настройки параметров и т.д.
Ядро - это программа или модуль, который отображает контент на основе языка разметки. Так называемое ядро браузера может быть просто понято как двигатель js, как двигатель автомобиля.

6) Какие браузеры какиие ядра используют
IE      Trident
Firefox Gecko
Safari  webkit
Chrome  Chromium/Bink
Opera   Presto

7) Что такое API (Application programming interface) - это механизмы, которые позволяют двум програмным компонентам взаимодействовать друг с другом, используя набор определений и протоколов.

8. Что такое ендпоинты. 
Это конечная точка. Это адрес, на который отправляют запросы.
 
9) URL (URI, URL, URN)
URL Uniform Resource Locators. Это строка символов, которая используется для идентификации по его адресу, по его местоположению.
Это адрес, который выдан уникальному ресурсу в интернете. Такими ресурсами могут быть HTML-страница, CSS-файл, изображение и тд.
URI Uniform Resource Identifier. Это строка символов, которая используется для идентификации какого-либо ресурса по его адресу или по его имени, либо по тоьу и тому вместе.
URN Это строка символов, которпая используется для идентификации какого-либо ресурса, но только по его имени.
 
10) Идемпотентные HTTP методы
Если многократное повторение одних и тех же запросов возвращает одинаковые результаты, то метод считается идемпотентным.
 
11) Безопасные HTTP методы
Метод HTTP является безопасным, если он не меняет состояние сервера. Другими словами, безопасный метод проводит операции "только чтение" (read only).
GET, HEAD, OPTIONS. Все безопасные методы являются также идемпотентными.

12) Иденфикация, Аутентификация, Авторизация
Это 3 процесса, защищающие Ваши данные или денежные средства от доступа посторонних лиц. 
Идентификация - это процесс распознавания пользователя по его идентификатору.
Аутентификация - это процедура проверки подлинности, доказательство что пользователь именно тот, за кого себя выдаёт.
Авторизация - это предоставление определенных прав.
 
13) Что такое IP
Internet Protocol Addresss Уникальный идентификатор (адрес) устройства (обычно компьютера), подключённого к локальной сети или интернету.

14) Что такое октаты в DNS
DNS Domain Name System, система доменных имён. Предоставляет браузеру возможность находить конкретный сайт по его имени с помощью DNS-серверов.
Это фундаментальная технология интернет-среды, которая отвечает за хранение и обработку информации о доменных адресах. 
Инструмент используется для преобразования доменных имен в IP-адреса в момент отправки пользователем запроса на сервер. 
IP-адрес - уникальный числовой идентификатор устройства. Он позволяет узнать, откуда загружается страница нужного сайта.
Получается, техноллогия DNS служитсвоеобразной "телефонной книгой", в которой хранится база доменных имен и их адресов.
  
15) Что такое порт, сколько портов у Linux сервера
Это цифровой иденетификатор (набор цифр до 16 бит) программы, которая используется для создания определённого интернет соединения, привязанного к IP-адресу.


16) Уровни OSI
OSI Open System Interconnection взаимодействие сетевых протоколов. Благодаоя ей, сетевые устройства могут между собой коммуницировать.
Физический уровень определяет физические характеристики линий связи, способы передачи бит через линии связи, соединяющие сетевые устройства.
Этот уровень способствует скорости передачи данных, синхронизации.

Канальный уровень определяет правила использования для передачи данных узлам, расположенных в том же сегменте локальной сети. Способствует обнаружению появившихся на физическом уровне дефектов, ошибок и их устранению. На данном уровне работает адресация (MAC, LLS), но отсутствует маршрутизация — это работа вышестоящего уровня. Канальный уровень использует протоколы Ethernet.

Сетевой уровень определяет пути передачи данных и содействует работе маршрутизатора.

Транспортный уровень определяет способ передачи данных, реализует контроль передвижения и качество доставки, что способствует использованию протоколов TCP (изменяет скорости передачи данных при необходимости), UDP и т. п.

Сеансовый уровень способствует непрерывному сеансу связи, управляет им, дает возможность приложениям коммуницировать между собой длительный промежуток времени. PPTP, L2TP — эти протоколы используются на данном уровне.

Уровень представления определяет трансформацию протоколов и кодирование/декодирование данных. MPEG, JPEG и т. п.

Прикладной уровень предоставляет взаимосвязь сети и пользователя. Этот уровень способствует работе всех приложений, протоколов HTTP, POP, SMTP и т.п. Он дает возможность получать уведомления по электронной почте или html-кода.

17) Хедеры http запросов
Заголовки HTTP (англ. HTTP Headers) — это строки в HTTP-сообщении, содержащие разделённую двоеточием пару имя-значение. Формат заголовков соответствует общему формату заголовков текстовых сетевых сообщений ARPA. Заголовки должны отделяться от тела сообщения хотя бы одной пустой строкой.
Все заголовки разделяются на четыре основных группы:

General Headers (Основные заголовки) — должны включаться в любое сообщение клиента и сервера.
Request Headers (Заголовки запроса) — используются только в запросах клиента.
Response Headers (Заголовки ответа) — только для ответов от сервера.
Entity Headers (Заголовки сущности) — сопровождают каждую сущность сообщения.